[{"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\index.js":"1","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\Home.js":"2","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\UserProfile.js":"3","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\Profile.js":"4","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\SubscribedUserPosts.js":"5","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\Navbar.js":"6","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\SignUp.js":"7","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\context\\userTypes.js":"8","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\CreatePost.js":"9","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\context\\userReducer.js":"10"},{"size":250,"mtime":1608216580901,"results":"11","hashOfConfig":"12"},{"size":7250,"mtime":1608342663162,"results":"13","hashOfConfig":"12"},{"size":5086,"mtime":1608340978027,"results":"14","hashOfConfig":"12"},{"size":4578,"mtime":1608399607295,"results":"15","hashOfConfig":"12"},{"size":7290,"mtime":1608342750890,"results":"16","hashOfConfig":"12"},{"size":1509,"mtime":1608329868278,"results":"17","hashOfConfig":"12"},{"size":3899,"mtime":1608399918564,"results":"18","hashOfConfig":"12"},{"size":142,"mtime":1608394548436,"results":"19","hashOfConfig":"12"},{"size":3487,"mtime":1608325242222,"results":"20","hashOfConfig":"12"},{"size":537,"mtime":1608394717080,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"x2ujye",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\index.js",[],["44","45"],"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\Home.js",["46"],"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\UserProfile.js",[],"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\Profile.js",["47"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport UserContext from '../../context/userContext';\r\nimport M from 'materialize-css';\r\nimport { UPDATE_PICTURE } from '../../context/userTypes';\r\n\r\nconst Profile = () => {\r\n  const [myPics, setMyPics] = useState([]);\r\n  const [image, setImage] = useState('');\r\n  const { state, dispatch } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    fetch('/myposts', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + localStorage.getItem('jwt'),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => setMyPics(result.myPosts));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const imageData = new FormData();\r\n      imageData.append('file', image);\r\n      imageData.append('upload_preset', 'Instagram-clone');\r\n      imageData.append('cloud_name', 'bradazg');\r\n      M.toast({\r\n        html: 'Uploading image. Please wait...',\r\n        classes: '#43a047 green darken-1',\r\n        displayLength: Infinity,\r\n      });\r\n      fetch('https://api.cloudinary.com/v1_1/bradazg/image/upload', {\r\n        method: 'POST',\r\n        body: imageData,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          fetch('/updatepicture', {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: 'Bearer ' + localStorage.getItem('jwt'),\r\n            },\r\n            body: JSON.stringify({\r\n              profilePicture: data.url,\r\n            }),\r\n          })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n              M.Toast.dismissAll();\r\n              localStorage.setItem(\r\n                'user',\r\n                JSON.stringify({\r\n                  ...state,\r\n                  profilePicture: result.profilePicture,\r\n                })\r\n              );\r\n              dispatch({\r\n                type: UPDATE_PICTURE,\r\n                payload: result.profilePicture,\r\n              });\r\n              M.toast({\r\n                html: 'Picture updated!',\r\n                classes: '#43a047 green darken-1',\r\n              });\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [image]);\r\n\r\n  const updatePhoto = (file) => {\r\n    setImage(file);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '550px', margin: '0px auto' }}>\r\n      <div\r\n        style={{\r\n          margin: '18px 0px',\r\n          borderBottom: '1px solid grey',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n          }}\r\n        >\r\n          <div>\r\n            <img\r\n              src={state && state.profilePicture}\r\n              alt={state && state.name}\r\n              style={{ width: '160px', height: '160px', borderRadius: '80px' }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h4>{state ? state.name : 'Loading...'}</h4>\r\n            <h5>{state ? state.email : 'Loading...'}</h5>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                width: '108%',\r\n              }}\r\n            >\r\n              <h6>{myPics.length} posts</h6>\r\n              <h6>{state ? state.followers.length : 0} followers</h6>\r\n              <h6>{state ? state.following.length : 0} following</h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className='file-field input-field'\r\n          style={{ marginTop: '5px', marginBottom: '5px' }}\r\n        >\r\n          <div className='btn #64b5f6 blue darken-1'>\r\n            <span>UPDATE PICTURE</span>\r\n            <input\r\n              type='file'\r\n              onChange={(e) => {\r\n                updatePhoto(e.target.files[0]);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            className='file-path-wrapper input-field'\r\n            style={{ marginTop: '0', marginBottom: '0' }}\r\n          >\r\n            <input className='file-path validate' type='text' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='gallery'>\r\n        {myPics.map((item) => (\r\n          <img\r\n            key={item._id}\r\n            className='item'\r\n            src={item.photo}\r\n            alt={item.title}\r\n            style={{ width: '160px', height: '160px' }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\SubscribedUserPosts.js",["48"],"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\Navbar.js",[],"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\SignUp.js",[],"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\context\\userTypes.js",[],"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\components\\screens\\CreatePost.js",[],"E:\\Programiranje\\My Projects\\mern-instagram-clone\\client\\src\\context\\userReducer.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":8,"column":18,"nodeType":"55","messageId":"56","endLine":8,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":71,"column":6,"nodeType":"59","endLine":71,"endColumn":13,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"54","line":8,"column":18,"nodeType":"55","messageId":"56","endLine":8,"endColumn":26},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"66","text":"67"},[2282,2289],"[dispatch, image, state]"]